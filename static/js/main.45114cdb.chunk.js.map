{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","dispatch","useContext","dispatcher","className","completed","type","onClick","ACTIONS","TOGGLECOMPLETE","payload","id","checked","title","DELETETODO","TodoList","todos","map","todo","toggleComplete","deleteTodo","Footer","count","filter","length","to","CLEARCOMPLETE","ADDTODO","INPUTTEXT","reducer","state","action","todoList","name","Date","now","userInput","text","markedTodo","React","createContext","App","initialState","todosList","useReducer","keypress","e","key","useEffect","window","addEventListener","removeEventListener","Provider","value","onChange","target","placeholder","autoFocus","path","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45114cdb.chunk.js","sourcesContent":["import { useContext } from \"react\";\nimport { ACTIONS, dispatcher } from \"../App\";\n\nfunction TodoItem(props) {\n  let dispatch = useContext(dispatcher);\n  return (\n    <li className={props.completed ? \"completed\" : \"\"}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          onClick={() =>\n            dispatch({\n              type: ACTIONS.TOGGLECOMPLETE,\n              payload: { id: props.id },\n            })\n          }\n          checked={props.completed}\n        />\n        <label>{props.title}</label>\n        <button\n          className=\"destroy\"\n          onClick={() =>\n            dispatch({ type: ACTIONS.DELETETODO, payload: { id: props.id } })\n          }\n        />\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import TodoItem from \"./TodoItem\";\nimport { ACTIONS, dispatcher } from \"../App\";\nimport { useContext } from \"react\";\n\nfunction TodoList(props) {\n  let dispatch = useContext(dispatcher);\n  return (\n    <section className=\"main\">\n      <ul className=\"todo-list\">\n        {props.todos.map((todo) => (\n          <TodoItem\n            title={todo.title}\n            completed={todo.completed}\n            id={todo.id}\n            toggleComplete={() =>\n              dispatch({\n                type: ACTIONS.TOGGLECOMPLETE,\n                payload: { id: props.id },\n              })\n            }\n            deleteTodo={() =>\n              dispatch({ type: ACTIONS.DELETETODO, payload: { id: props.id } })\n            }\n            key={todo.id}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default TodoList;\n","import { Link } from \"react-router-dom\";\n// import TodoList from \"./TodoList\";\nimport { ACTIONS, dispatcher } from \"../App\";\nimport { useContext } from \"react\";\n\nfunction Footer(props) {\n  let count = props.todo.filter((todo) => !todo.completed);\n  let dispatch = useContext(dispatcher);\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{count.length}</strong> item(s) left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <Link to=\"/\">All</Link>\n        </li>\n        <li>\n          <Link to=\"/active\">Active</Link>\n        </li>\n        <li>\n          <Link to=\"/completed\">Completed</Link>\n        </li>\n      </ul>\n      <button\n        className=\"clear-completed\"\n        onClick={() => dispatch({ type: ACTIONS.CLEARCOMPLETE })}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport { useReducer, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport todosList from \"./todos.json\";\n\nimport TodoList from \"./components/TodoList\";\nimport Footer from \"./components/Footer\";\n\nconst ACTIONS = {\n  TOGGLECOMPLETE: \"TOGGLECOMPLETE\",\n  ADDTODO: \"ADDTODO\",\n  DELETETODO: \"DELETETODO\",\n  CLEARCOMPLETE: \"CLEARCOMPLETE\",\n  INPUTTEXT: \"INPUTTEXT\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.ADDTODO:\n      return {\n        ...state,\n        todoList: [...state.todoList, newTodo(action.payload.name)],\n      };\n    case ACTIONS.DELETETODO:\n      return {\n        ...state,\n        todoList: state.todoList.filter((todo) => {\n          return todo.id !== action.payload.id;\n        }),\n      };\n    case ACTIONS.CLEARCOMPLETE:\n      return {\n        ...state,\n        todoList: state.todoList.filter((todo) => {\n          return !todo.completed;\n        }),\n      };\n    case ACTIONS.INPUTTEXT:\n      return { ...state, userInput: action.payload.text };\n    case ACTIONS.TOGGLECOMPLETE:\n      return {\n        ...state,\n        todoList: state.todoList.map((todo) => {\n          if (todo.id === action.payload.id) {\n            let markedTodo = { ...todo };\n            markedTodo.completed = !markedTodo.completed;\n            return markedTodo;\n          }\n          return todo;\n        }),\n      };\n    default:\n      return state;\n  }\n}\n\nfunction newTodo(name) {\n  return { id: Date.now(), title: name, completed: false };\n}\n\nfunction App() {\n  const initialState = {\n    todoList: todosList,\n    userInput: \"\",\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const onChange = (e) => {\n    dispatch({ type: ACTIONS.INPUTTEXT, payload: { text: e.target.value } });\n  };\n\n  const keypress = (e) => {\n    if (e.key === \"Enter\") {\n      dispatch({ type: ACTIONS.ADDTODO, payload: { name: state.userInput } });\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keypress);\n    return () => {\n      //clears event listener as to not double the keypress\n      window.removeEventListener(\"keydown\", keypress);\n    };\n  });\n\n  return (\n    <dispatcher.Provider value={dispatch}>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>Todo List</h1>\n          <input\n            onChange={onChange}\n            //empties input field after pressing enter\n            value={state.userInput}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            autoFocus\n          />\n        </header>\n        <Switch>\n          {/* //link to active still active todos */}\n          <Route path=\"/active\">\n            <TodoList\n              todos={state.todoList.filter(\n                (item) => item.completed === false\n                // return item.completed === false;\n              )}\n            />\n          </Route>\n          {/* //link to completed todos */}\n          <Route path=\"/completed\">\n            <TodoList\n              todos={state.todoList.filter((item) => item.completed === true)}\n            />\n          </Route>\n\n          <TodoList todos={state.todoList} />\n        </Switch>\n        <Footer\n          todo={state.todoList.filter((todo) => todo.completed === false)}\n        />\n      </section>\n    </dispatcher.Provider>\n  );\n}\n\nexport const dispatcher = React.createContext(null);\nexport { ACTIONS };\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}